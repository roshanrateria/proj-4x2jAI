// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  name        String
  password    String
  role        String   @default("BUYER") // BUYER or SELLER
  phone       String?
  address     String?
  latitude    Float?
  longitude   Float?
  upiId       String?  // For sellers
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  products    Product[]
  orders      Order[]
  cartItems   CartItem[]
  wishlistItems WishlistItem[]
  
  @@map("users")
}

model Product {
  id          String   @id @default(cuid())
  title       String
  description String
  tagline     String?
  tags        String   @default("[]") // JSON string array
  price       Float
  images      String   @default("[]") // JSON string array
  inStock     Boolean  @default(true)
  stockQuantity Int    @default(0)   // Available quantity
  sellerId    String
  
  // Discount & Pricing üí∞
  originalPrice    Float?   // Original price before discount
  discountPercent  Float?   // Discount percentage (0-100)
  discountAmount   Float?   // Fixed discount amount
  discountStart    DateTime? // Discount start date
  discountEnd      DateTime? // Discount end date
  isFeatured       Boolean  @default(false) // Featured/promoted product
  
  // Artisan-specific fields üé®
  // Material & Craft
  material    String?  // Primary material (Wood, Clay, Silk, Cotton, Metal, Stone, etc.)
  technique   String?  // Crafting technique (Hand-carved, Hand-woven, Hand-painted, etc.)
  artForm     String?  // Traditional art form (Madhubani, Warli, Kalamkari, etc.)
  origin      String?  // Place of origin/cultural heritage (Bihar, Rajasthan, Kerala, etc.)
  
  // Dimensions & Physical Properties
  length      Float?   // Length in cm
  width       Float?   // Width in cm  
  height      Float?   // Height in cm
  weight      Float?   // Weight in grams
  
  // Artisan Story & Heritage üíù
  artisanStory     String?  // Story behind the piece/artisan
  culturalSignificance String?  // Cultural/religious significance
  timeToCreate     Int?     // Time taken to create (in days)
  isCustomizable   Boolean  @default(false) // Can be customized
  
  // Care & Authenticity
  careInstructions String?  // How to care for the product
  authenticityMark String?  // Certificate/mark of authenticity
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  seller      User       @relation(fields: [sellerId], references: [id], onDelete: Cascade)
  orderItems  OrderItem[]
  cartItems   CartItem[]
  wishlistItems WishlistItem[]
  
  @@map("products")
}

model CartItem {
  id        String   @id @default(cuid())
  quantity  Int      @default(1)
  userId    String
  productId String
  createdAt DateTime @default(now())

  // Relations
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
  @@map("cart_items")
}

model WishlistItem {
  id        String   @id @default(cuid())
  userId    String
  productId String
  createdAt DateTime @default(now())

  // Relations
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
  @@map("wishlist_items")
}

model Order {
  id            String      @id @default(cuid())
  buyerId       String
  sellerId      String
  totalAmount   Float
  deliveryCharge Float      @default(0)
  status        String @default("PENDING") // PENDING, CONFIRMED, DELIVERED, CANCELLED
  paymentStatus String @default("PENDING") // PENDING, PAID, FAILED
  deliveryAddress String
  deliveryLatitude Float
  deliveryLongitude Float
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  // Relations
  buyer         User        @relation(fields: [buyerId], references: [id])
  orderItems    OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        String @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Float

  // Relations
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}

// Note: SQLite doesn't support enums, using string fields with default values
